// Generated by view binder compiler. Do not edit!
package com.demo.retrofithttpmethods.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.demo.retrofithttpmethods.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonCreate;

  @NonNull
  public final TextView buttonLoginRedirect;

  @NonNull
  public final TextInputEditText editTextBirthDay;

  @NonNull
  public final TextInputEditText editTextEmail;

  @NonNull
  public final TextInputEditText editTextLastName;

  @NonNull
  public final TextInputEditText editTextName;

  @NonNull
  public final EditText editTextPassword;

  @NonNull
  public final TextInputEditText editTextUserName;

  @NonNull
  public final EditText etConfirmPassword;

  @NonNull
  public final LinearLayout socialLayout;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull Button buttonCreate,
      @NonNull TextView buttonLoginRedirect, @NonNull TextInputEditText editTextBirthDay,
      @NonNull TextInputEditText editTextEmail, @NonNull TextInputEditText editTextLastName,
      @NonNull TextInputEditText editTextName, @NonNull EditText editTextPassword,
      @NonNull TextInputEditText editTextUserName, @NonNull EditText etConfirmPassword,
      @NonNull LinearLayout socialLayout, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonCreate = buttonCreate;
    this.buttonLoginRedirect = buttonLoginRedirect;
    this.editTextBirthDay = editTextBirthDay;
    this.editTextEmail = editTextEmail;
    this.editTextLastName = editTextLastName;
    this.editTextName = editTextName;
    this.editTextPassword = editTextPassword;
    this.editTextUserName = editTextUserName;
    this.etConfirmPassword = etConfirmPassword;
    this.socialLayout = socialLayout;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCreate;
      Button buttonCreate = ViewBindings.findChildViewById(rootView, id);
      if (buttonCreate == null) {
        break missingId;
      }

      id = R.id.buttonLoginRedirect;
      TextView buttonLoginRedirect = ViewBindings.findChildViewById(rootView, id);
      if (buttonLoginRedirect == null) {
        break missingId;
      }

      id = R.id.editTextBirthDay;
      TextInputEditText editTextBirthDay = ViewBindings.findChildViewById(rootView, id);
      if (editTextBirthDay == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      TextInputEditText editTextEmail = ViewBindings.findChildViewById(rootView, id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.editTextLastName;
      TextInputEditText editTextLastName = ViewBindings.findChildViewById(rootView, id);
      if (editTextLastName == null) {
        break missingId;
      }

      id = R.id.editTextName;
      TextInputEditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.editTextPassword;
      EditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      id = R.id.editTextUserName;
      TextInputEditText editTextUserName = ViewBindings.findChildViewById(rootView, id);
      if (editTextUserName == null) {
        break missingId;
      }

      id = R.id.et_confirm_password;
      EditText etConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (etConfirmPassword == null) {
        break missingId;
      }

      id = R.id.social_layout;
      LinearLayout socialLayout = ViewBindings.findChildViewById(rootView, id);
      if (socialLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, buttonCreate, buttonLoginRedirect,
          editTextBirthDay, editTextEmail, editTextLastName, editTextName, editTextPassword,
          editTextUserName, etConfirmPassword, socialLayout, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
